// Generated by view binder compiler. Do not edit!
package nl.eduid.verifai.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nl.eduid.verifai.R;

public final class ContentVerifaiResultBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView firstNameValue;

  @NonNull
  public final TextView lastNameValue;

  @NonNull
  public final TextView mrzValue;

  @NonNull
  public final Button startLivenessButton;

  @NonNull
  public final Button startNfcButton;

  private ContentVerifaiResultBinding(@NonNull LinearLayout rootView,
      @NonNull TextView firstNameValue, @NonNull TextView lastNameValue, @NonNull TextView mrzValue,
      @NonNull Button startLivenessButton, @NonNull Button startNfcButton) {
    this.rootView = rootView;
    this.firstNameValue = firstNameValue;
    this.lastNameValue = lastNameValue;
    this.mrzValue = mrzValue;
    this.startLivenessButton = startLivenessButton;
    this.startNfcButton = startNfcButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentVerifaiResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentVerifaiResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_verifai_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentVerifaiResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.first_name_value;
      TextView firstNameValue = ViewBindings.findChildViewById(rootView, id);
      if (firstNameValue == null) {
        break missingId;
      }

      id = R.id.last_name_value;
      TextView lastNameValue = ViewBindings.findChildViewById(rootView, id);
      if (lastNameValue == null) {
        break missingId;
      }

      id = R.id.mrz_value;
      TextView mrzValue = ViewBindings.findChildViewById(rootView, id);
      if (mrzValue == null) {
        break missingId;
      }

      id = R.id.start_liveness_button;
      Button startLivenessButton = ViewBindings.findChildViewById(rootView, id);
      if (startLivenessButton == null) {
        break missingId;
      }

      id = R.id.start_nfc_button;
      Button startNfcButton = ViewBindings.findChildViewById(rootView, id);
      if (startNfcButton == null) {
        break missingId;
      }

      return new ContentVerifaiResultBinding((LinearLayout) rootView, firstNameValue, lastNameValue,
          mrzValue, startLivenessButton, startNfcButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
