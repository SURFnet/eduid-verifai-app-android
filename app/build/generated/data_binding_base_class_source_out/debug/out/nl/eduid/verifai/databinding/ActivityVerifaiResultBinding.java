// Generated by view binder compiler. Do not edit!
package nl.eduid.verifai.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nl.eduid.verifai.R;

public final class ActivityVerifaiResultBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ContentVerifaiResultBinding contentResult;

  @NonNull
  public final ConstraintLayout coordinatorLayout;

  @NonNull
  public final Button vizDetailsBtn;

  private ActivityVerifaiResultBinding(@NonNull ConstraintLayout rootView,
      @NonNull ContentVerifaiResultBinding contentResult,
      @NonNull ConstraintLayout coordinatorLayout, @NonNull Button vizDetailsBtn) {
    this.rootView = rootView;
    this.contentResult = contentResult;
    this.coordinatorLayout = coordinatorLayout;
    this.vizDetailsBtn = vizDetailsBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVerifaiResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVerifaiResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_verifai_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVerifaiResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.content_result;
      View contentResult = ViewBindings.findChildViewById(rootView, id);
      if (contentResult == null) {
        break missingId;
      }
      ContentVerifaiResultBinding binding_contentResult = ContentVerifaiResultBinding.bind(contentResult);

      ConstraintLayout coordinatorLayout = (ConstraintLayout) rootView;

      id = R.id.vizDetailsBtn;
      Button vizDetailsBtn = ViewBindings.findChildViewById(rootView, id);
      if (vizDetailsBtn == null) {
        break missingId;
      }

      return new ActivityVerifaiResultBinding((ConstraintLayout) rootView, binding_contentResult,
          coordinatorLayout, vizDetailsBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
